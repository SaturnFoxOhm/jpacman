plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.spotbugs' version '1.7.1'
}

sourceSets {
    defaultTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/default-test/java')
        }
        resources.srcDir file('src/default-test/resources')
    }
}

configurations {
    defaultTestCompile.extendsFrom testCompile
    defaultTestImplementation.extendsFrom testImplementation
    defaultTestRuntime.extendsFrom testRuntime
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.assertj:assertj-core:3.24.2'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-migrationsupport:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-migrationsupport:5.10.0'
    implementation 'org.jupiter-rpc:jupiter-rpc:1.3.1'
    implementation 'org.jupiter-rpc:jupiter-common:1.3.1'
    implementation 'org.jupiter-rpc:jupiter-rpc:1.3.1'
    implementation 'org.jupiter-rpc:jupiter-common:1.3.1'
    implementation 'org.jupiter-rpc:jupiter-common:1.3.1'
    implementation 'org.mockito:mockito-junit-jupiter:5.4.0'
    implementation 'org.mockito:mockito-junit-jupiter:5.4.0'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    implementation 'com.skylarwatson:blinky:1.2.2'
    compile "com.google.guava:guava:$guavaVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    compileOnly "com.github.spotbugs:spotbugs-annotations:$spotbugsAnnotationsVersion"

    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.assertj:assertj-core:$assertjVersion"

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.2.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.2.0'
    testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.2.0'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.19.0'

}

task defaultTest(type: Test) {
    testClassesDirs = sourceSets.defaultTest.output.classesDirs
    classpath = sourceSets.defaultTest.runtimeClasspath
}
test.dependsOn defaultTest

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

defaultTest {
    useJUnitPlatform()
}

jacoco {
    toolVersion = jacocoVersion
}

jacocoTestReport {
    executionData tasks.withType(Test)
    reports {
        csv.enabled true
    }
}

checkstyle {
    configFile file("checkstyle.xml")
    ignoreFailures = false
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task staticAnalysis(type: GradleBuild) {
    tasks = [
        'clean',
        'checkstyleMain',
        'checkstyleTest',
        'checkstyleDefaultTest',
        'pmdDefaultTest',
        'spotbugsMain',
        'spotbugsTest',
        'spotbugsDefaultTest',
    ]
}

mainClassName = 'nl.tudelft.jpacman.Launcher'
